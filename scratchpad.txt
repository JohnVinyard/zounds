TOOO:
-------------
TODO: Toeplitz is missing boundaries and causing bugs (I think)

TODO: The idea behind some of the PyTablesFrameController.Address methods is
	seriously broken
	
- BUG : Address equivalence bug: [1,4,10] and [1,6,10] are considered equivalent.  This
  is incorrect

TODO: Answer the question "How do file system seek times compare to PyTables?"

TODO: Do weird, "blank" search results occur when drawing queries directly from
	the database?

TODO: extractors using multiprocessing hang when updating database

- Try performing PCA on conv feature prior to semantic hash learning

- Blog entry explaining sliding_window method

- Figure out how to deal with two failing tests.

- Get rid of binary incompatibility warning

- tests for all extractors

- TemplateMatch should use the new sliding_window function (Check toeplitz and sw equivalence)

- Add a note in the docs about the source distribution being the preferred route

- Add a small collection of soundfiles downloadable from the doc site

- If you're on Ubuntu, you can use the command `xdg-open <html-file>` to open a local file or URL using the default browser.

- Make a note in the documentation about ALSA audio

- TODO: Pooled doesn't do chunk-based processing

- BUG: Pooled doesn't work for nested Pooled features

- Is it possible to cache the extractor chain so it doesn't have to be rebuilt for
  each new incoming pattern. Will this require a flush() or reset() method?

- Try writing a simple, realtime JACK-based audio player (check out Alex McLean's SmoothDirt repo)

- BUG: It's possible to add duplicates to the database because of external_id
	truncation

TODO: Two modes for ExhaustiveSearch

TODO: Do another installation test run and move up a new dist package

TODO: Sphinx documentation

TODO: Use the python logging module

TODO: Ensure that all quickstart scripts use argparse. (Use nargs='?' for single arg scripts)

TODO: README file for setuptools

Finish Constant-Q implementation

Finish Scattering implementation

TODO:  Try lowpass filter subtraction method for spectrogram sharpening

- TODO: Nice printing for Extractor, FrameModel, Preprocess, Learn, Environment, etc...

- TODO: Pass an id or a (source,external_id) argument to search.py as the query 

- TODO: Tile method should work with any extractor, not just a Pipeline 

- TODO: Visualize Exhaustive search results (features and distances)

- TODO: Ensure that quickstart/ab.py works with a few different algorithms

- BUG: Step sizes of > 1 seem to screw up parallelized ExhaustiveSearch

-TODO: Compare results from serial and parallel ExhaustiveSearch implementations,
		ensuring they're identical

- Bug: It's possible to load controllers of the wrong type with 
	PickledController-derived classes
	
- FEATURE : Automatic rebuilding of search indices after data is added

- Add psychoacoustics module.  Add mel scale and refactor some code in analyze.bark


- Write LearnedFeature tests

- mp3 -> wav conversion by acquirers

- Configurable encoder and decoder for the "audio" feature, making it possible
	to store mp3, ogg vorbis, or some other audio-encoding, instead of just
	raw audio.  It'd be great if I could store lots of useful features AND
	compress the data

- Automatically parallelize independent branches of an extractor tree