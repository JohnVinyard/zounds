Observation - Sequences are sometimes considered similar because of background
noise, as opposed to the events in the sequence that a human would consider
salient.  How can noise be removed?

There are 3 types of similarity
- substitution
- timbre
- association or co-occurence

TOOO:
-------------
Understand the shape and size of matching pursuit

Bug: It's possible to load controllers of the wrong type with 
	PickledController-derived classes

FrameModel.concatenate method

Try :  For minhash, Use only one hash function, but instead of selecting only the minimum 
	   value as the simhash, select the least  values. The probability of a 
	   match then becomes.....The advantage of this over independent hash 
	   functions is that it sets a minimum on the number of members that the 
	   two sets must share in order to match. This mitigates the effect of 
	   extremely common set members on your clusters.
	   http://moultano.wordpress.com/article/simple-simhashing-3kbzhsxyg4467-6/

Profile ingest.py. How can this be faster?


Search questions
	- Do search results improve with the size of the datastore?
	- What is the distribution of pattern *lengths* that get chosen as results?
		i.e., are longer sounds preferred?
	- Do results improve when excluding sequences that are less than half the
		query length from _score_sequences() ? 
	
Automatic rebuilding of search indices after data is added

Write LearnedFeature tests

Patterns

Sphinx documentation

multi-process sync - Deferred until I can figure out celery chord bug

Add celery to list of dependencies once I've settled on using it

Smarc audio-rate conversion by acquirers
mp3 -> wav conversion by acquirers

Configurable encoder and decoder for the "audio" feature, making it possible
	to store mp3, ogg vorbis, or some other audio-encoding, instead of just
	raw audio.  It'd be great if I could store lots of useful features AND
	compress the data


 

speed and storage size tests for
	- mongodb
	- PyTables
	- Cassandra
	- SqlLite
Doing the following
	- writes
	- random reads
	- range reads
	- binary feature similarity
	- minhash similarity
	



